@page
@model InTandemRegistrationPortal.Pages.Events.IndexModel
@using Microsoft.AspNetCore.Identity
@using InTandemRegistrationPortal.Models
@using Microsoft.AspNetCore.Authorization
@using InTandemRegistrationPortal.Authorization
@inject SignInManager<InTandemUser> SignInManager
@inject IAuthorizationService AuthorizationService
@{
    ViewData["Title"] = "Events";
}

<h2>Upcoming Rides and Events</h2>

<br />
@if (User.IsInRole(Constants.AdministratorsRole))
{
    <p>
        <a asp-page="EventWizard1">Create New</a>
    </p>

}
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.RideEvents[0].EventName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RideEvents[0].EventDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RideEvents[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RideEvents[0].Location)
                </th>
                <th>
                    Leader(s)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.UpcomingEvents)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.EventName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EventDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location)
                    </td>
                    <td>
                        @{
                            var managersList = item.RideLeaderAssignments.Select(x => x.InTandemUser.FullName);
                            var managers = string.Join(", ", managersList);
                        }
                        @managers
                    </td>
                    <td>
                        @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.Update)).Succeeded)
                        {
                            <a class="btn btn-primary btn-sm" asp-page="./Edit" asp-route-id="@item.ID">Edit</a>

                        }
                    </td>
                    <td>
                        @if (User.IsInRole(Constants.AdministratorsRole))
                        {
                            <form method="post">
                                <div class="form-group">
                                    <input type="submit" value="Copy Event" asp-page-handler="Copy" asp-route-id="@item.ID" class="btn btn-primary btn-sm" />
                                </div>
                            </form>

                            <a class="btn btn-danger btn-sm" asp-page="./Cancel" asp-route-id="@item.ID">Cancel</a>
                        }
                    </td>
                    <td>
                        @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.Register)).Succeeded)
                        {
                            <form id="registerForm" asp-page="./Register" asp-route-id=@item.ID>
                                <button id="register" type="submit" class="btn btn-success btn-sm">Register</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@if (User.IsInRole(Constants.AdministratorsRole))
{
    <h2>Incomplete Rides and Events</h2>

    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].EventName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].EventDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].Location)
                    </th>
                    <th>
                        Leader(s)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.IncompleteEvents)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td>
                            @{
                                var managersList = item.RideLeaderAssignments.Select(x => x.InTandemUser.FullName);
                                var managers = string.Join(", ", managersList);
                            }
                            @managers
                        </td>
                        <td>
                            @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.Update)).Succeeded)
                            {
                                <a class="btn btn-primary btn-sm" asp-page="./Edit" asp-route-id="@item.ID">Edit</a>
                            }
                        </td>
                        <td>
                            @if (User.IsInRole(Constants.AdministratorsRole))
                            {
                                <a class="btn btn-danger btn-sm" asp-page="./Cancel" asp-route-id="@item.ID">Cancel</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <h2>Cancelled Rides and Events</h2>

    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].EventName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].EventDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].Location)
                    </th>
                    <th>
                        Leader(s)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.CancelledEvents)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td>
                            @{
                                var managersList = item.RideLeaderAssignments.Select(x => x.InTandemUser.FullName);
                                var managers = string.Join(", ", managersList);
                            }
                            @managers
                        </td>
                        <td>
                            @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.Update)).Succeeded)
                            {
                                <a class="btn btn-primary btn-sm" asp-page="./Edit" asp-route-id="@item.ID">Edit</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <h2>Passed Rides and Events</h2>

    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].EventName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].EventDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RideEvents[0].Location)
                    </th>
                    <th>
                        Leader(s)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.PassedEvents)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td>
                            @{
                                var managersList = item.RideLeaderAssignments.Select(x => x.InTandemUser.FullName);
                                var managers = string.Join(", ", managersList);
                            }
                            @managers
                        </td>
                        <td>
                            @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.Update)).Succeeded)
                            {
                                <a class="btn btn-primary btn-sm" asp-page="./Edit" asp-route-id="@item.ID">Edit</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
